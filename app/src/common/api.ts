// GENERATED BY POSTSTACK
// AT 3/6/2022 7:10:10 AM
import { SchemaData, EnumData, TableData, TypeData } from "poststack"

// Base
export const Schema: SchemaData = {
  enums: [],
  types: [],
  tables: [],
  functions: []
};

// Enums

// Types

// Tables

export interface Country {
  code: string;
  name: string;
  official_name: string;
  sovereignty: string;
  alpha_3_code: string;
  numeric_code: number;
  tld: string;
}
export const Country: TableData = {
  name: "country",
  tsName: "Country",
  columns: [
    { name: "code",
      order: 1,
      nullable: false,
      tsType: "string"
    },

    { name: "name",
      order: 2,
      nullable: false,
      tsType: "string"
    },

    { name: "official_name",
      order: 3,
      nullable: false,
      tsType: "string"
    },

    { name: "sovereignty",
      order: 4,
      nullable: false,
      tsType: "string"
    },

    { name: "alpha_3_code",
      order: 5,
      nullable: false,
      tsType: "string"
    },

    { name: "numeric_code",
      order: 6,
      nullable: false,
      tsType: "number"
    },

    { name: "tld",
      order: 7,
      nullable: true,
      tsType: "string"
    }],
};
Schema.tables.push(Country);

// Functions

export interface Tables {
  country: Country
}

export interface Functions {

}

export interface Api {
  tables: Tables;
  functions: Functions;
  schema: SchemaData;
}

// This is to avoid a type parameter.
export const Api: Api = {
  tables: undefined as unknown as Tables,
  functions: undefined as unknown as Functions,
  schema: Schema
};

export default Api;
